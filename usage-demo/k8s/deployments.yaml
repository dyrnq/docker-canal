apiVersion: v1
kind: ConfigMap
metadata:
  name: canal-mysql-initdb
data:
  initdb.sql: |
    create database if not exists canal_tsdb default character set utf8mb4 collate utf8mb4_unicode_ci;
    use canal_tsdb;
    CREATE TABLE IF NOT EXISTS `meta_snapshot` (
      `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
      `gmt_create` datetime NOT NULL COMMENT '创建时间',
      `gmt_modified` datetime NOT NULL COMMENT '修改时间',
      `destination` varchar(128) DEFAULT NULL COMMENT '通道名称',
      `binlog_file` varchar(64) DEFAULT NULL COMMENT 'binlog文件名',
      `binlog_offest` bigint(20) DEFAULT NULL COMMENT 'binlog偏移量',
      `binlog_master_id` varchar(64) DEFAULT NULL COMMENT 'binlog节点id',
      `binlog_timestamp` bigint(20) DEFAULT NULL COMMENT 'binlog应用的时间戳',
      `data` longtext DEFAULT NULL COMMENT '表结构数据',
      `extra` text DEFAULT NULL COMMENT '额外的扩展信息',
      PRIMARY KEY (`id`),
      UNIQUE KEY binlog_file_offest(`destination`,`binlog_master_id`,`binlog_file`,`binlog_offest`),
      KEY `destination` (`destination`),
      KEY `destination_timestamp` (`destination`,`binlog_timestamp`),
      KEY `gmt_modified` (`gmt_modified`)
    ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COMMENT='表结构记录表快照表';

    CREATE TABLE IF NOT EXISTS `meta_history` (
      `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
      `gmt_create` datetime NOT NULL COMMENT '创建时间',
      `gmt_modified` datetime NOT NULL COMMENT '修改时间',
      `destination` varchar(128) DEFAULT NULL COMMENT '通道名称',
      `binlog_file` varchar(64) DEFAULT NULL COMMENT 'binlog文件名',
      `binlog_offest` bigint(20) DEFAULT NULL COMMENT 'binlog偏移量',
      `binlog_master_id` varchar(64) DEFAULT NULL COMMENT 'binlog节点id',
      `binlog_timestamp` bigint(20) DEFAULT NULL COMMENT 'binlog应用的时间戳',
      `use_schema` varchar(1024) DEFAULT NULL COMMENT '执行sql时对应的schema',
      `sql_schema` varchar(1024) DEFAULT NULL COMMENT '对应的schema',
      `sql_table` varchar(1024) DEFAULT NULL COMMENT '对应的table',
      `sql_text` longtext DEFAULT NULL COMMENT '执行的sql',
      `sql_type` varchar(256) DEFAULT NULL COMMENT 'sql类型',
      `extra` text DEFAULT NULL COMMENT '额外的扩展信息',
      PRIMARY KEY (`id`),
      UNIQUE KEY binlog_file_offest(`destination`,`binlog_master_id`,`binlog_file`,`binlog_offest`),
      KEY `destination` (`destination`),
      KEY `destination_timestamp` (`destination`,`binlog_timestamp`),
      KEY `gmt_modified` (`gmt_modified`)
    ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COMMENT='表结构变化明细表';


    GRANT ALL PRIVILEGES ON `canal\_tsdb`.* TO `canal`@`%`;
    FLUSH PRIVILEGES;
    SHOW GRANTS FOR 'canal'@'%';


    -- https://github.com/alibaba/canal/blob/master/docker/image/canal_manager.sql
    CREATE DATABASE /*!32312 IF NOT EXISTS*/ `canal_manager` /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin */;

    USE `canal_manager`;

    SET NAMES utf8;
    SET FOREIGN_KEY_CHECKS = 0;

    -- ----------------------------
    -- Table structure for canal_adapter_config
    -- ----------------------------
    DROP TABLE IF EXISTS `canal_adapter_config`;
    CREATE TABLE `canal_adapter_config` (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `category` varchar(45) NOT NULL,
      `name` varchar(45) NOT NULL,
      `status` varchar(45) DEFAULT NULL,
      `content` text NOT NULL,
      `modified_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    -- ----------------------------
    -- Table structure for canal_cluster
    -- ----------------------------
    DROP TABLE IF EXISTS `canal_cluster`;
    CREATE TABLE `canal_cluster` (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `name` varchar(63) NOT NULL,
      `zk_hosts` varchar(255) NOT NULL,
      `modified_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    -- ----------------------------
    -- Table structure for canal_config
    -- ----------------------------
    DROP TABLE IF EXISTS `canal_config`;
    CREATE TABLE `canal_config` (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `cluster_id` bigint(20) DEFAULT NULL,
      `server_id` bigint(20) DEFAULT NULL,
      `name` varchar(45) NOT NULL,
      `status` varchar(45) DEFAULT NULL,
      `content` text NOT NULL,
      `content_md5` varchar(128) NOT NULL,
      `modified_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`),
      UNIQUE KEY `sid_UNIQUE` (`server_id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    -- ----------------------------
    -- Table structure for canal_instance_config
    -- ----------------------------
    DROP TABLE IF EXISTS `canal_instance_config`;
    CREATE TABLE `canal_instance_config` (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `cluster_id` bigint(20) DEFAULT NULL,
      `server_id` bigint(20) DEFAULT NULL,
      `name` varchar(45) NOT NULL,
      `status` varchar(45) DEFAULT NULL,
      `content` text NOT NULL,
      `content_md5` varchar(128) DEFAULT NULL,
      `modified_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`),
      UNIQUE KEY `name_UNIQUE` (`name`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    -- ----------------------------
    -- Table structure for canal_node_server
    -- ----------------------------
    DROP TABLE IF EXISTS `canal_node_server`;
    CREATE TABLE `canal_node_server` (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `cluster_id` bigint(20) DEFAULT NULL,
      `name` varchar(63) NOT NULL,
      `ip` varchar(63) NOT NULL,
      `admin_port` int(11) DEFAULT NULL,
      `tcp_port` int(11) DEFAULT NULL,
      `metric_port` int(11) DEFAULT NULL,
      `status` varchar(45) DEFAULT NULL,
      `modified_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    -- ----------------------------
    -- Table structure for canal_user
    -- ----------------------------
    DROP TABLE IF EXISTS `canal_user`;
    CREATE TABLE `canal_user` (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `username` varchar(31) NOT NULL,
      `password` varchar(128) NOT NULL,
      `name` varchar(31) NOT NULL,
      `roles` varchar(31) NOT NULL,
      `introduction` varchar(255) DEFAULT NULL,
      `avatar` varchar(255) DEFAULT NULL,
      `creation_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    SET FOREIGN_KEY_CHECKS = 1;

    -- ----------------------------
    -- Records of canal_user
    -- ----------------------------
    BEGIN;
    INSERT INTO `canal_user` VALUES (1, 'admin', '6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9', 'Canal Manager', 'admin', NULL, NULL, '2019-07-14 00:05:28');
    COMMIT;

    SET FOREIGN_KEY_CHECKS = 1;

    GRANT ALL PRIVILEGES ON `canal\_manager`.* TO `canal`@`%`;
    FLUSH PRIVILEGES;
    SHOW GRANTS FOR 'canal'@'%';

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: canal-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: canal-mysql
  template:
    metadata:
      labels:
        app: canal-mysql
    spec:
      containers:
      - name: mysql
        image: bitnami/mysql:8.0.40-debian-12-r1
        resources:
          requests:
            memory: "1024Mi"
            cpu: "500m"
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "666666"
        - name: MYSQL_USER
          value: canal
        - name: MYSQL_PASSWORD
          value: canal
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /bitnami/mysql/data
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        - name: custom-conf
          mountPath: /opt/bitnami/mysql/conf/my_custom.cnf
          subPath: my_custom.cnf
      volumes:
      - name: mysql-storage
        emptyDir: {}
      - name: custom-init-scripts
        configMap:
          name: canal-mysql-initdb
      - name: custom-conf
        configMap:
          name: canal-mysql-conf
---
apiVersion: v1
kind: Service
metadata:
  name: canal-mysql
spec:
  selector:
    app: canal-mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: canal-mysql-conf
  labels:
    app: canal-demo
data:
  my_custom.cnf: |
    [mysqld]
    character_set_server = utf8mb4
    collation_server = utf8mb4_unicode_ci
    default_time_zone = '+08:00'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: canal-logback
  labels:
    app: canal-demo
data:
  logback.xml: |
    <configuration>
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>

        <root level="info">
            <appender-ref ref="STDOUT" />
        </root>
    </configuration>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zoonavigator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zoonavigator
  template:
    metadata:
      labels:
        app: zoonavigator
    spec:
      containers:
        - name: zoonavigator
          image: elkozmon/zoonavigator:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: HTTP_PORT
              value: "9090"
          ports:
            - containerPort: 9090
              name: http
---
apiVersion: v1
kind: Service
metadata:
  name: zoonavigator
spec:
  type: NodePort
  selector:
    app: zoonavigator
  ports:
    - port: 9090
      targetPort: http
      nodePort: 32090
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: main-db8-mysql-initdb
data:
  initdb.sql: |

    CREATE USER canal IDENTIFIED WITH mysql_native_password BY 'canal';
    GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'canal'@'%';
    FLUSH PRIVILEGES;
    CREATE DATABASE /*!32312 IF NOT EXISTS*/ `k8stest2` /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin */;
    USE `k8stest2`;
    SET NAMES utf8;
    SET FOREIGN_KEY_CHECKS = 0;

    -- ----------------------------
    -- Table structure for stuff
    -- ----------------------------
    DROP TABLE IF EXISTS `stuff`;
    CREATE TABLE `stuff` (
        id INT PRIMARY KEY,
        name VARCHAR(50)
    );


    INSERT INTO stuff (id, name) VALUES (1, 'Alice');
    INSERT INTO stuff (id, name) VALUES (2, 'Bob');
    INSERT INTO stuff (id, name) VALUES (3, 'Charlie');
    INSERT INTO stuff (id, name) VALUES (4, 'David');
    INSERT INTO stuff (id, name) VALUES (5, 'Eva');
    INSERT INTO stuff (id, name) VALUES (6, 'Frank');
    INSERT INTO stuff (id, name) VALUES (7, 'Grace');
    INSERT INTO stuff (id, name) VALUES (8, 'Hannah');
    INSERT INTO stuff (id, name) VALUES (9, 'Ivy');
    INSERT INTO stuff (id, name) VALUES (10, 'Jack');
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: main-db8-mysql-conf
  labels:
    app: canal-demo
data:
  my_custom.cnf: |
    [mysqld]
    log-bin=mysql-bin
    binlog-format=ROW
    server_id=1
    character_set_server = utf8mb4
    collation_server = utf8mb4_unicode_ci
    default_time_zone = '+08:00'
    binlog_row_image = FULL
    binlog_row_metadata = FULL

---
apiVersion: v1
kind: Service
metadata:
  name: main-db8-mysql
spec:
  selector:
    app: main-db8-mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: main-db8-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: main-db8-mysql
  template:
    metadata:
      labels:
        app: main-db8-mysql
    spec:
      containers:
      - name: mysql
        image: bitnami/mysql:8.0.40-debian-12-r1
        resources:
          requests:
            memory: "1024Mi"
            cpu: "500m"
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "666666"
        # - name: MYSQL_USER
        #   value: canal
        # - name: MYSQL_PASSWORD
        #   value: canal
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /bitnami/mysql/data
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        - name: custom-conf
          mountPath: /opt/bitnami/mysql/conf/my_custom.cnf
          subPath: my_custom.cnf
      volumes:
      - name: mysql-storage
        emptyDir: {}
      - name: custom-init-scripts
        configMap:
          name: main-db8-mysql-initdb
      - name: custom-conf
        configMap:
          name: main-db8-mysql-conf
